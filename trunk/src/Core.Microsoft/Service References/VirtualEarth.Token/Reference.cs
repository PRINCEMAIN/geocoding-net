//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeoCoding.Microsoft.VirtualEarth.Token {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://s.mappoint.net/mappoint-30/", ConfigurationName="VirtualEarth.Token.CommonServiceSoap")]
    public interface CommonServiceSoap {
        
        // CODEGEN: Generating message contract since message GetVersionInfoRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetVersionInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        GeoCoding.Microsoft.VirtualEarth.Token.GetVersionInfoResponse GetVersionInfo(GeoCoding.Microsoft.VirtualEarth.Token.GetVersionInfoRequest request);
        
        // CODEGEN: Generating message contract since message GetCountryRegionInfoRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetCountryRegionInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        GeoCoding.Microsoft.VirtualEarth.Token.GetCountryRegionInfoResponse GetCountryRegionInfo(GeoCoding.Microsoft.VirtualEarth.Token.GetCountryRegionInfoRequest request);
        
        // CODEGEN: Generating message contract since message GetEntityTypesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetEntityTypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        GeoCoding.Microsoft.VirtualEarth.Token.GetEntityTypesResponse GetEntityTypes(GeoCoding.Microsoft.VirtualEarth.Token.GetEntityTypesRequest request);
        
        // CODEGEN: Generating message contract since message GetDataSourceInfoRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetDataSourceInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        GeoCoding.Microsoft.VirtualEarth.Token.GetDataSourceInfoResponse GetDataSourceInfo(GeoCoding.Microsoft.VirtualEarth.Token.GetDataSourceInfoRequest request);
        
        // CODEGEN: Generating message contract since message GetGreatCircleDistancesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetGreatCircleDistances", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        GeoCoding.Microsoft.VirtualEarth.Token.GetGreatCircleDistancesResponse GetGreatCircleDistances(GeoCoding.Microsoft.VirtualEarth.Token.GetGreatCircleDistancesRequest request);
        
        // CODEGEN: Generating message contract since message GetClientTokenRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetClientToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        GeoCoding.Microsoft.VirtualEarth.Token.GetClientTokenResponse GetClientToken(GeoCoding.Microsoft.VirtualEarth.Token.GetClientTokenRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CustomerInfoHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private short customLogEntryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public short CustomLogEntry {
            get {
                return this.customLogEntryField;
            }
            set {
                this.customLogEntryField = value;
                this.RaisePropertyChanged("CustomLogEntry");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class TokenSpecification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string clientIPAddressField;
        
        private int tokenValidityDurationMinutesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ClientIPAddress {
            get {
                return this.clientIPAddressField;
            }
            set {
                this.clientIPAddressField = value;
                this.RaisePropertyChanged("ClientIPAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int TokenValidityDurationMinutes {
            get {
                return this.tokenValidityDurationMinutesField;
            }
            set {
                this.tokenValidityDurationMinutesField = value;
                this.RaisePropertyChanged("TokenValidityDurationMinutes");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class DataSource : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string versionField;
        
        private string descriptionField;
        
        private DataSourceCapability capabilityField;
        
        private int[] entityExtentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public DataSourceCapability Capability {
            get {
                return this.capabilityField;
            }
            set {
                this.capabilityField = value;
                this.RaisePropertyChanged("Capability");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public int[] EntityExtent {
            get {
                return this.entityExtentField;
            }
            set {
                this.entityExtentField = value;
                this.RaisePropertyChanged("EntityExtent");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum DataSourceCapability {
        
        /// <remarks/>
        CanDrawMaps = 1,
        
        /// <remarks/>
        CanFindPlaces = 2,
        
        /// <remarks/>
        CanFindNearby = 4,
        
        /// <remarks/>
        CanRoute = 8,
        
        /// <remarks/>
        CanFindAddress = 16,
        
        /// <remarks/>
        HasIcons = 32,
        
        /// <remarks/>
        DataServiceQuery = 64,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class EntityProperty : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string displayNameField;
        
        private string dataTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
                this.RaisePropertyChanged("DisplayName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
                this.RaisePropertyChanged("DataType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class EntityType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string displayNameField;
        
        private string parentNameField;
        
        private string definitionField;
        
        private EntityProperty[] propertiesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
                this.RaisePropertyChanged("DisplayName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ParentName {
            get {
                return this.parentNameField;
            }
            set {
                this.parentNameField = value;
                this.RaisePropertyChanged("ParentName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Definition {
            get {
                return this.definitionField;
            }
            set {
                this.definitionField = value;
                this.RaisePropertyChanged("Definition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Property")]
        public EntityProperty[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
                this.RaisePropertyChanged("Properties");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LatLong : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double latitudeField;
        
        private double longitudeField;
        
        public LatLong() {
            this.latitudeField = 0D;
            this.longitudeField = 0D;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DefaultValueAttribute(0D)]
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
                this.RaisePropertyChanged("Latitude");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DefaultValueAttribute(0D)]
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
                this.RaisePropertyChanged("Longitude");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CountryRegionInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int entityIDField;
        
        private LatLong latLongField;
        
        private string iso2Field;
        
        private string iso3Field;
        
        private string friendlyNameField;
        
        private string officialNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int EntityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
                this.RaisePropertyChanged("EntityID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public LatLong LatLong {
            get {
                return this.latLongField;
            }
            set {
                this.latLongField = value;
                this.RaisePropertyChanged("LatLong");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Iso2 {
            get {
                return this.iso2Field;
            }
            set {
                this.iso2Field = value;
                this.RaisePropertyChanged("Iso2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Iso3 {
            get {
                return this.iso3Field;
            }
            set {
                this.iso3Field = value;
                this.RaisePropertyChanged("Iso3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string FriendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
                this.RaisePropertyChanged("FriendlyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string OfficialName {
            get {
                return this.officialNameField;
            }
            set {
                this.officialNameField = value;
                this.RaisePropertyChanged("OfficialName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CountryRegionContext : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int entityIDField;
        
        private string iso2Field;
        
        public CountryRegionContext() {
            this.entityIDField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int EntityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
                this.RaisePropertyChanged("EntityID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Iso2 {
            get {
                return this.iso2Field;
            }
            set {
                this.iso2Field = value;
                this.RaisePropertyChanged("Iso2");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CultureInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private int lcidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Lcid {
            get {
                return this.lcidField;
            }
            set {
                this.lcidField = value;
                this.RaisePropertyChanged("Lcid");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class UserInfoHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CultureInfo cultureField;
        
        private DistanceUnit defaultDistanceUnitField;
        
        private CountryRegionContext contextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public CultureInfo Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
                this.RaisePropertyChanged("Culture");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public DistanceUnit DefaultDistanceUnit {
            get {
                return this.defaultDistanceUnitField;
            }
            set {
                this.defaultDistanceUnitField = value;
                this.RaisePropertyChanged("DefaultDistanceUnit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public CountryRegionContext Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum DistanceUnit {
        
        /// <remarks/>
        Kilometer,
        
        /// <remarks/>
        Mile,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class VersionInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string componentField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Component {
            get {
                return this.componentField;
            }
            set {
                this.componentField = value;
                this.RaisePropertyChanged("Component");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVersionInfo", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetVersionInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader;
        
        public GetVersionInfoRequest() {
        }
        
        public GetVersionInfoRequest(GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader, GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader) {
            this.CustomerInfoHeader = CustomerInfoHeader;
            this.UserInfoHeader = UserInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVersionInfoResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetVersionInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public VersionInfo[] GetVersionInfoResult;
        
        public GetVersionInfoResponse() {
        }
        
        public GetVersionInfoResponse(VersionInfo[] GetVersionInfoResult) {
            this.GetVersionInfoResult = GetVersionInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCountryRegionInfo", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetCountryRegionInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public int[] entityIDs;
        
        public GetCountryRegionInfoRequest() {
        }
        
        public GetCountryRegionInfoRequest(GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader, GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader, int[] entityIDs) {
            this.CustomerInfoHeader = CustomerInfoHeader;
            this.UserInfoHeader = UserInfoHeader;
            this.entityIDs = entityIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCountryRegionInfoResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetCountryRegionInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public CountryRegionInfo[] GetCountryRegionInfoResult;
        
        public GetCountryRegionInfoResponse() {
        }
        
        public GetCountryRegionInfoResponse(CountryRegionInfo[] GetCountryRegionInfoResult) {
            this.GetCountryRegionInfoResult = GetCountryRegionInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEntityTypes", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetEntityTypesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public string dataSourceName;
        
        public GetEntityTypesRequest() {
        }
        
        public GetEntityTypesRequest(GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader, GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader, string dataSourceName) {
            this.CustomerInfoHeader = CustomerInfoHeader;
            this.UserInfoHeader = UserInfoHeader;
            this.dataSourceName = dataSourceName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEntityTypesResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetEntityTypesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public EntityType[] GetEntityTypesResult;
        
        public GetEntityTypesResponse() {
        }
        
        public GetEntityTypesResponse(EntityType[] GetEntityTypesResult) {
            this.GetEntityTypesResult = GetEntityTypesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDataSourceInfo", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetDataSourceInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public string[] dataSourceNames;
        
        public GetDataSourceInfoRequest() {
        }
        
        public GetDataSourceInfoRequest(GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader, GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader, string[] dataSourceNames) {
            this.CustomerInfoHeader = CustomerInfoHeader;
            this.UserInfoHeader = UserInfoHeader;
            this.dataSourceNames = dataSourceNames;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDataSourceInfoResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetDataSourceInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public DataSource[] GetDataSourceInfoResult;
        
        public GetDataSourceInfoResponse() {
        }
        
        public GetDataSourceInfoResponse(DataSource[] GetDataSourceInfoResult) {
            this.GetDataSourceInfoResult = GetDataSourceInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGreatCircleDistances", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetGreatCircleDistancesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public LatLong[] latLongs;
        
        public GetGreatCircleDistancesRequest() {
        }
        
        public GetGreatCircleDistancesRequest(GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader, GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader, LatLong[] latLongs) {
            this.CustomerInfoHeader = CustomerInfoHeader;
            this.UserInfoHeader = UserInfoHeader;
            this.latLongs = latLongs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGreatCircleDistancesResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetGreatCircleDistancesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public double[] GetGreatCircleDistancesResult;
        
        public GetGreatCircleDistancesResponse() {
        }
        
        public GetGreatCircleDistancesResponse(double[] GetGreatCircleDistancesResult) {
            this.GetGreatCircleDistancesResult = GetGreatCircleDistancesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClientToken", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetClientTokenRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public GeoCoding.Microsoft.VirtualEarth.Token.TokenSpecification specification;
        
        public GetClientTokenRequest() {
        }
        
        public GetClientTokenRequest(GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader, GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader, GeoCoding.Microsoft.VirtualEarth.Token.TokenSpecification specification) {
            this.CustomerInfoHeader = CustomerInfoHeader;
            this.UserInfoHeader = UserInfoHeader;
            this.specification = specification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClientTokenResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetClientTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public string GetClientTokenResult;
        
        public GetClientTokenResponse() {
        }
        
        public GetClientTokenResponse(string GetClientTokenResult) {
            this.GetClientTokenResult = GetClientTokenResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CommonServiceSoapChannel : GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommonServiceSoapClient : System.ServiceModel.ClientBase<GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap>, GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap {
        
        public CommonServiceSoapClient() {
        }
        
        public CommonServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommonServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GeoCoding.Microsoft.VirtualEarth.Token.GetVersionInfoResponse GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap.GetVersionInfo(GeoCoding.Microsoft.VirtualEarth.Token.GetVersionInfoRequest request) {
            return base.Channel.GetVersionInfo(request);
        }
        
        public VersionInfo[] GetVersionInfo(GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader, GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader) {
            GeoCoding.Microsoft.VirtualEarth.Token.GetVersionInfoRequest inValue = new GeoCoding.Microsoft.VirtualEarth.Token.GetVersionInfoRequest();
            inValue.CustomerInfoHeader = CustomerInfoHeader;
            inValue.UserInfoHeader = UserInfoHeader;
            GeoCoding.Microsoft.VirtualEarth.Token.GetVersionInfoResponse retVal = ((GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap)(this)).GetVersionInfo(inValue);
            return retVal.GetVersionInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GeoCoding.Microsoft.VirtualEarth.Token.GetCountryRegionInfoResponse GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap.GetCountryRegionInfo(GeoCoding.Microsoft.VirtualEarth.Token.GetCountryRegionInfoRequest request) {
            return base.Channel.GetCountryRegionInfo(request);
        }
        
        public CountryRegionInfo[] GetCountryRegionInfo(GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader, GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader, int[] entityIDs) {
            GeoCoding.Microsoft.VirtualEarth.Token.GetCountryRegionInfoRequest inValue = new GeoCoding.Microsoft.VirtualEarth.Token.GetCountryRegionInfoRequest();
            inValue.CustomerInfoHeader = CustomerInfoHeader;
            inValue.UserInfoHeader = UserInfoHeader;
            inValue.entityIDs = entityIDs;
            GeoCoding.Microsoft.VirtualEarth.Token.GetCountryRegionInfoResponse retVal = ((GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap)(this)).GetCountryRegionInfo(inValue);
            return retVal.GetCountryRegionInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GeoCoding.Microsoft.VirtualEarth.Token.GetEntityTypesResponse GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap.GetEntityTypes(GeoCoding.Microsoft.VirtualEarth.Token.GetEntityTypesRequest request) {
            return base.Channel.GetEntityTypes(request);
        }
        
        public EntityType[] GetEntityTypes(GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader, GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader, string dataSourceName) {
            GeoCoding.Microsoft.VirtualEarth.Token.GetEntityTypesRequest inValue = new GeoCoding.Microsoft.VirtualEarth.Token.GetEntityTypesRequest();
            inValue.CustomerInfoHeader = CustomerInfoHeader;
            inValue.UserInfoHeader = UserInfoHeader;
            inValue.dataSourceName = dataSourceName;
            GeoCoding.Microsoft.VirtualEarth.Token.GetEntityTypesResponse retVal = ((GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap)(this)).GetEntityTypes(inValue);
            return retVal.GetEntityTypesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GeoCoding.Microsoft.VirtualEarth.Token.GetDataSourceInfoResponse GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap.GetDataSourceInfo(GeoCoding.Microsoft.VirtualEarth.Token.GetDataSourceInfoRequest request) {
            return base.Channel.GetDataSourceInfo(request);
        }
        
        public DataSource[] GetDataSourceInfo(GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader, GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader, string[] dataSourceNames) {
            GeoCoding.Microsoft.VirtualEarth.Token.GetDataSourceInfoRequest inValue = new GeoCoding.Microsoft.VirtualEarth.Token.GetDataSourceInfoRequest();
            inValue.CustomerInfoHeader = CustomerInfoHeader;
            inValue.UserInfoHeader = UserInfoHeader;
            inValue.dataSourceNames = dataSourceNames;
            GeoCoding.Microsoft.VirtualEarth.Token.GetDataSourceInfoResponse retVal = ((GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap)(this)).GetDataSourceInfo(inValue);
            return retVal.GetDataSourceInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GeoCoding.Microsoft.VirtualEarth.Token.GetGreatCircleDistancesResponse GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap.GetGreatCircleDistances(GeoCoding.Microsoft.VirtualEarth.Token.GetGreatCircleDistancesRequest request) {
            return base.Channel.GetGreatCircleDistances(request);
        }
        
        public double[] GetGreatCircleDistances(GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader, GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader, LatLong[] latLongs) {
            GeoCoding.Microsoft.VirtualEarth.Token.GetGreatCircleDistancesRequest inValue = new GeoCoding.Microsoft.VirtualEarth.Token.GetGreatCircleDistancesRequest();
            inValue.CustomerInfoHeader = CustomerInfoHeader;
            inValue.UserInfoHeader = UserInfoHeader;
            inValue.latLongs = latLongs;
            GeoCoding.Microsoft.VirtualEarth.Token.GetGreatCircleDistancesResponse retVal = ((GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap)(this)).GetGreatCircleDistances(inValue);
            return retVal.GetGreatCircleDistancesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GeoCoding.Microsoft.VirtualEarth.Token.GetClientTokenResponse GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap.GetClientToken(GeoCoding.Microsoft.VirtualEarth.Token.GetClientTokenRequest request) {
            return base.Channel.GetClientToken(request);
        }
        
        public string GetClientToken(GeoCoding.Microsoft.VirtualEarth.Token.CustomerInfoHeader CustomerInfoHeader, GeoCoding.Microsoft.VirtualEarth.Token.UserInfoHeader UserInfoHeader, GeoCoding.Microsoft.VirtualEarth.Token.TokenSpecification specification) {
            GeoCoding.Microsoft.VirtualEarth.Token.GetClientTokenRequest inValue = new GeoCoding.Microsoft.VirtualEarth.Token.GetClientTokenRequest();
            inValue.CustomerInfoHeader = CustomerInfoHeader;
            inValue.UserInfoHeader = UserInfoHeader;
            inValue.specification = specification;
            GeoCoding.Microsoft.VirtualEarth.Token.GetClientTokenResponse retVal = ((GeoCoding.Microsoft.VirtualEarth.Token.CommonServiceSoap)(this)).GetClientToken(inValue);
            return retVal.GetClientTokenResult;
        }
    }
}
